{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","value","className","onSubmit","preventDefault","id","Math","floor","random","text","edit","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LA0CeA,MAxCf,SAAkBC,GACd,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,iBAAO,MAExBC,qBAAU,WACNF,EAASG,QAAQC,WAGrB,IAAMC,EAAe,SAAAC,GACjBP,EAASO,EAAEC,OAAOC,QAWtB,OACI,8BACI,sBAAMC,UAAU,YAAYC,SAXf,SAAAJ,GACjBA,EAAEK,iBACFf,EAAMc,SAAS,CACXE,GAAIC,KAAKC,MAAoB,IAAdD,KAAKE,UACpBC,KAAMlB,IAGVC,EAAS,KAIL,SACKH,EAAMqB,KACP,qCACA,uBAAOC,KAAK,OAAOC,YAAY,mBAAmBX,MAAOV,EAAOsB,KAAK,OAAOX,UAAU,kBAAkBY,SAAUhB,EAAciB,IAAKtB,IACrI,wBAAQS,UAAU,mBAAlB,wBAGC,qCACD,uBAAOS,KAAK,OAAOC,YAAY,aAAaX,MAAOV,EAAOsB,KAAK,OAAOX,UAAU,aAAaY,SAAUhB,EAAciB,IAAKtB,IAC1H,wBAAQS,UAAU,cAAlB,+B,eCaDc,EA1CF,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAC7C,EAAwB9B,mBAAS,CAC7Be,GAAI,KACJJ,MAAO,KAFX,mBAAOS,EAAP,KAAaW,EAAb,KAeA,OAAIX,EAAKL,GACE,cAAC,EAAD,CAAUK,KAAMA,EAAMP,SAXZ,SAAAF,GACjBmB,EAAWV,EAAKL,GAAIJ,GACpBoB,EAAQ,CACJhB,GAAI,KACJJ,MAAO,QAURgB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACb,sBACItB,UAAWqB,EAAKE,WAAa,oBAAsB,WADvD,UAII,qBAAmBC,QAAS,kBAAMR,EAAaK,EAAKlB,KAApD,SACKkB,EAAKd,MADAc,EAAKlB,IAGf,sBAAKH,UAAU,QAAf,UACI,cAAC,IAAD,CACIwB,QAAS,kBAAMP,EAAWI,EAAKlB,KAC/BH,UAAU,gBAEd,cAAC,IAAD,CACIwB,QAAS,kBAAML,EAAQ,CAAEhB,GAAIkB,EAAKlB,GAAIJ,MAAOsB,EAAKd,QAClDP,UAAU,mBAZbsB,OCoBFG,MA5Cf,WACI,MAAwBrC,mBAAS,IAAjC,mBAAO2B,EAAP,KAAcW,EAAd,KAkCA,OACI,gCACI,6DACA,cAAC,EAAD,CAAUzB,SApCF,SAAAoB,GACZ,GAAIA,EAAKd,OAAM,QAAQoB,KAAKN,EAAKd,MAAjC,CAGA,IAAMqB,EAAQ,CAAIP,GAAJ,mBAAaN,IAC3BW,EAASE,OAgCL,cAAC,EAAD,CAAMb,MAAOA,EAAOC,aAbP,SAAAb,GACjB,IAAI0B,EAAed,EAAMK,KAAI,SAAAC,GAIzB,OAHGA,EAAKlB,KAAKA,IACTkB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXK,EAASG,IAM2CZ,WArBrC,SAAAd,GACf,IAAM2B,EAAY,YAAIf,GAAOgB,QAAO,SAAAV,GAAI,OAAEA,EAAKlB,KAAKA,KAEpDuB,EAASI,IAkBmEZ,WA7B7D,SAACc,EAAQC,GACpBA,EAAS1B,OAAM,QAAQoB,KAAKM,EAAS1B,OAG7CmB,GAAS,SAAAQ,GAAI,OAAGA,EAAKd,KAAI,SAAAe,GAAI,OAAIA,EAAKhC,KAAM6B,EAAOC,EAASE,eCPjDC,MARf,WACE,OACE,qBAAKpC,UAAU,WAAf,SACE,cAAC,EAAD,OCDNqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f23d3a4b.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState('');\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(()=>{\r\n        inputRef.current.focus()\r\n    })\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value)\r\n    }\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random()*10000),\r\n            text: input\r\n        });\r\n\r\n        setInput('');\r\n    };\r\n    return (\r\n        <div>\r\n            <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n                {props.edit?(\r\n                <>\r\n                <input type=\"text\" placeholder=\"Update your item\" value={input} name=\"text\" className=\"todo-input edit\" onChange={handleChange} ref={inputRef}/>\r\n                <button className=\"todo-button edit\">Update </button>\r\n                </> \r\n                ):\r\n                (<>\r\n                <input type=\"text\" placeholder=\"Add a todo\" value={input} name=\"text\" className=\"todo-input\" onChange={handleChange} ref={inputRef}/>\r\n                <button className=\"todo-button\">Add todo </button>\r\n                </>)}\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        })\r\n    }\r\n\r\n   \r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div\r\n            className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n            key={index}\r\n        >\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className='icons'>\r\n                <RiCloseCircleLine\r\n                    onClick={() => removeTodo(todo.id)}\r\n                    className='delete-icon'\r\n                />\r\n                <TiEdit\r\n                    onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n                    className='edit-icon'\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n};\r\n\r\nexport default Todo;","import React, {useState} from 'react';\r\nimport Todo from './Todo';\r\nimport TodoForm from \"./TodoForm\";\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos]=useState([]);\r\n    const addTodo = todo =>{\r\n        if(!todo.text||/^\\s*$/.test(todo.text)){\r\n            return;\r\n    }\r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue)=>{\r\n        if(!newValue.text||/^\\s*$/.test(newValue.text)){\r\n            return;\r\n    }\r\n    setTodos(prev =>prev.map(item =>(item.id ===todoId?newValue:item))\r\n    );\r\n    }\r\n\r\n    const removeTodo = id =>{\r\n        const removeArr = [...todos].filter(todo=>todo.id!==id)\r\n\r\n        setTodos(removeArr);\r\n    }\r\n\r\n    \r\n\r\n    const completeTodo = id =>{\r\n        let updatedTodos = todos.map(todo=>{\r\n            if(todo.id===id){\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo\r\n        });\r\n        setTodos(updatedTodos);\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>What is the plan for today?</h1>\r\n            <TodoForm onSubmit={addTodo}/>\r\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}